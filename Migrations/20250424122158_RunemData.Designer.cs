// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Practice2025_Gusev;

#nullable disable

namespace Practice2025_Gusev.Migrations
{
    [DbContext(typeof(Practice2025Context))]
    [Migration("20250424122158_RunemData")]
    partial class RunemData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Practice2025_Gusev.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupId"));

                    b.Property<string>("GroupNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("InstitutId")
                        .HasColumnType("integer");

                    b.Property<int>("SpecialtyId")
                        .HasColumnType("integer");

                    b.Property<int>("institut_id")
                        .HasColumnType("integer");

                    b.Property<int>("specialty_id")
                        .HasColumnType("integer");

                    b.HasKey("GroupId");

                    b.HasIndex("institut_id");

                    b.HasIndex("specialty_id");

                    b.ToTable("groups");
                });

            modelBuilder.Entity("Practice2025_Gusev.Models.Institute", b =>
                {
                    b.Property<int>("InstitutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InstitutId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameInstitute")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TitleDean")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("InstitutId");

                    b.ToTable("institutes");
                });

            modelBuilder.Entity("Practice2025_Gusev.Models.Specialty", b =>
                {
                    b.Property<int>("SpecialtyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SpecialtyId"));

                    b.Property<int>("InstitutId")
                        .HasColumnType("integer");

                    b.Property<string>("SpecialtyIdentifier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SpecialtyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SpecialtyId");

                    b.ToTable("specialties");
                });

            modelBuilder.Entity("Practice2025_Gusev.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StudentId"));

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearAmission")
                        .HasColumnType("integer");

                    b.Property<int>("group_id")
                        .HasColumnType("integer");

                    b.HasKey("StudentId");

                    b.HasIndex("group_id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("Practice2025_Gusev.Models.Group", b =>
                {
                    b.HasOne("Practice2025_Gusev.Models.Institute", "Institute")
                        .WithMany()
                        .HasForeignKey("institut_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Practice2025_Gusev.Models.Specialty", "Specialty")
                        .WithMany()
                        .HasForeignKey("specialty_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institute");

                    b.Navigation("Specialty");
                });

            modelBuilder.Entity("Practice2025_Gusev.Models.Student", b =>
                {
                    b.HasOne("Practice2025_Gusev.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });
#pragma warning restore 612, 618
        }
    }
}
